// <auto-generated />
using System;
using BenefitsCalculator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BenefitsCalculator.Migrations
{
    [DbContext(typeof(BenefitsContext))]
    [Migration("20231023162001_RemoveCol")]
    partial class RemoveCol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BenefitsCalculator.Data.Entities.BenefitsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AmountQuotation")
                        .HasColumnType("float");

                    b.Property<double>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<int>("BenefitsStatus")
                        .HasColumnType("int");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("Date");

                    b.Property<double>("GuaranteedIssue")
                        .HasColumnType("float");

                    b.Property<int>("Multiple")
                        .HasColumnType("int");

                    b.Property<double>("PendedAmount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.ToTable("BenefitsHistories");
                });

            modelBuilder.Entity("BenefitsCalculator.Data.Entities.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SetupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetupId");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("BenefitsCalculator.Data.Entities.Setup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("GuaranteedIssue")
                        .HasColumnType("float");

                    b.Property<int>("Increments")
                        .HasColumnType("int");

                    b.Property<int>("MaxAgeLimit")
                        .HasColumnType("int");

                    b.Property<int>("MaxRange")
                        .HasColumnType("int");

                    b.Property<int>("MinAgeLimit")
                        .HasColumnType("int");

                    b.Property<int>("MinRange")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Setups");
                });

            modelBuilder.Entity("BenefitsCalculator.Data.Entities.BenefitsHistory", b =>
                {
                    b.HasOne("BenefitsCalculator.Data.Entities.Consumer", "Consumer")
                        .WithMany("BenefitsHistories")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("BenefitsCalculator.Data.Entities.Consumer", b =>
                {
                    b.HasOne("BenefitsCalculator.Data.Entities.Setup", "Setup")
                        .WithMany()
                        .HasForeignKey("SetupId");

                    b.Navigation("Setup");
                });

            modelBuilder.Entity("BenefitsCalculator.Data.Entities.Consumer", b =>
                {
                    b.Navigation("BenefitsHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
